generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int          @id @default(autoincrement())
  nome         String
  email        String
  funcao       String
  admin        Boolean
  usuario      String       @unique
  senha        String
  observacoes  String?      @default("")
  compras      Compra[]
  adicionais   Adicionais[]
}

model Produto {
  id           Int          @id @default(autoincrement())
  nome         String
  numero_serie Int          @unique
  fabricante   String
  descricao    String
  compras      Compra[]
  estoque      Estoque[]
}

model Compra {
  id            Int         @id @default(autoincrement())
  data_compra   DateTime
  data_emissao  DateTime
  data_envio    DateTime
  valor_total   Float
  usuario_id    Int?
  usuario       Usuario?    @relation(fields: [usuario_id], references: [id])
  produto_id    Int?
  produto       Produto?    @relation(fields: [produto_id], references: [id])
  projeto_id    Int?
  projeto       Projeto?    @relation(fields: [projeto_id], references: [id])
  fornecedor_id Int?
  fornecedor    Fornecedor? @relation(fields: [fornecedor_id], references: [id])
  cliente_id    Int?
  cliente       Cliente?    @relation(fields: [cliente_id], references: [id])
  Adicionais Adicionais[]
}

model Projeto {
  id                  Int          @id @default(autoincrement())
  nome_projeto        String
  responsavel_tecnico String
  gerente_projeto     String
  cliente_id          Int?
  cliente             Cliente?     @relation(fields: [cliente_id], references: [id])
  compras             Compra[]
  estoques            Estoque[]
}

model Estoque {
  id                     Int                  @id @default(autoincrement())
  quantidade             Int
  tipo_unitario          Int
  produto_id             Int?
  produto                Produto?             @relation(fields: [produto_id], references: [id])
  projeto_id             Int?
  projeto                Projeto?             @relation(fields: [projeto_id], references: [id])
  local_armazenamento_id Int?
  local_armazenamento    Local_Armazenamento? @relation(fields: [local_armazenamento_id], references: [id])
}

model Local_Armazenamento {
  id       Int       @id @default(autoincrement())
  andar    String
  sala     String
  armario  String
  estoques Estoque[]
}

model Razao_Social {
  id                 Int         @id @default(autoincrement())
  CNPJ               String      @unique
  inscricao_estadual String
  endereco           String
  bairro             String
  CEP                Int
  municipio          String
  UF                 String
  telefone           String
  clienteId          Int?
  fornecedorId       Int?
  cliente            Cliente?    @relation(fields: [clienteId], references: [id])
  fornecedor         Fornecedor? @relation(fields: [fornecedorId], references: [id])
}

model Cliente {
  id                   Int            @id @default(autoincrement())
  razao_social_cliente String
  razao_social         Razao_Social[]
  projetos             Projeto[]
  compras              Compra[]
}

model Fornecedor {
  id                      Int            @id @default(autoincrement())
  razao_social_fornecedor String
  razao_social            Razao_Social[]
  compras                 Compra[]
}

model Adicionais {
  id           Int       @id @default(autoincrement())
  observacoes  String
  usuario_id   Int @unique
  usuario      Usuario  @relation(fields: [usuario_id], references: [id])
  compra_id    Int
  compra       Compra   @relation(fields: [compra_id], references: [id])
}
